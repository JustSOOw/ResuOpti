version: '3.8'

services:
  # PostgreSQL测试数据库
  postgres-test:
    image: postgres:14-alpine
    container_name: resumopti-db-test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: resumopti_test
    ports:
      - "15433:5432"  # 使用不同的端口避免冲突
    tmpfs:
      - /var/lib/postgresql/data  # 使用临时文件系统，测试完自动清理
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 10

  # 后端测试服务
  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: resumopti-backend-test
    ports:
      - "3001:3000"  # 使用不同的端口避免冲突
    environment:
      NODE_ENV: test
      DB_HOST: postgres-test
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: resumopti_test
      JWT_SECRET: test-secret-key-for-e2e-testing
      PORT: 3000
      CORS_ORIGIN: http://localhost:5174
    depends_on:
      postgres-test:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads-test:/app/uploads  # 使用独立的上传目录
      - ./specs:/app/specs  # 挂载specs目录以访问API规范
    command: sh -c "DB_FORCE_SYNC=true npm run db:sync && npm run db:seed && npm start"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 5s
      timeout: 3s
      retries: 10

  # 前端测试服务
  frontend-test:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: resumopti-frontend-test
    ports:
      - "5174:5173"  # 使用不同的端口避免冲突
    environment:
      VITE_API_BASE_URL: http://localhost:3001/api/v1
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      backend-test:
        condition: service_healthy
    command: npm run dev -- --host 0.0.0.0

  # Cypress E2E测试运行器（可选，用于CI环境）
  cypress:
    image: cypress/included:13.15.2
    container_name: resumopti-cypress
    depends_on:
      - frontend-test
      - backend-test
    environment:
      CYPRESS_baseUrl: http://frontend-test:5173
      CYPRESS_apiUrl: http://backend-test:3000/api/v1
    working_dir: /e2e
    volumes:
      - ./frontend:/e2e
    entrypoint: cypress run
    profiles:
      - ci  # 只在CI模式下启动
